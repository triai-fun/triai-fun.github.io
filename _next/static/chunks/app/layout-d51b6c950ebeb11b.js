(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3185],{92366:function(e,t,n){"use strict";e.exports=n.p+"static/media/wasm_bg.1735728c.wasm"},91485:function(e,t,n){Promise.resolve().then(n.bind(n,84826))},84826:function(e,t,n){"use strict";let a;n.r(t),n.d(t,{default:function(){return ei},dynamic:function(){return ea}});var i=n(57437),o=n(39974),r=n.n(o);n(8536),n(2778),n(43906),n(24385),n(55170),n(16413),n(72063),n(24069);var s=n(46550),l=n(43949),d=JSON.parse('{"TrinitySwap":"TrinitySwap","ConnectWallet":"Connect Wallet","Success":"Success","Error":"Error","MyWallet":"My Wallet","Disconnect":"Disconnect","Home":"Home","Launch":"Launch","Free Launch":"Free Launch","Swap":"Swap","Chart":"Chart","LP":"LP","Ranking":"Ranking","Pool":"Pool","DAO":"DAO","copyright":"\xa9 2024 Trinity. All rights reserved","Name":"Trinity","Desciption":"The next-generation multi-chain aggregation platform for free launch and fair trading.","GuideLink":"How it works?","by":"by","PeakContentForNFT":"All NFT with the mint progress reach 80% will be automatically displayed here. Trinity is a decentralized aggregation platform and does not endorse any meme coin. (DYOR)!","PeakContentForToken":"All meme coins with the 24H TVL TOP3 will be automatically displayed here. Trinity is a decentralized aggregation platform and does not endorse any meme coin. (DYOR)!","MintProgress":"Mint Progress","MintTime":"Time","State":"State","OnlineTime":"Online Time","Launch Time":"Launch Time","Trading Volume":"Trading Volume","Market Cap":"Market Cap","24H Price Increase":"24H Price Increase","TotalMintProgress":"Total Mint Progress","24HMintProgress":"24H Mint  Progress","Upcoming":"Upcoming","Live":"Live","Completed":"Completed","Failed":"Failed","Asc":"Asc","Desc":"Desc","Bought":"Bought","Sold":"Sold","of":"of","SearchForNFTsPlaceHolder":"Search for NFTs","SearchForTokensPlaceHolder":"Search for tokens","Search":"Search","Progress":"Progress","Loading":"Loading, please wait.","LoadMore":"Load More","NoData":"No data here","Mint":"Mint","LaunchButton":"Launch","Launch Title":"Launch Your NFT for Free on Trinity","FreeLaunch":"Free Launch","PermanentReward":"Permanent 10% Reward","NoTeamAllocation":"No Team Allocation","Images":"Images","JPEG/PNG/WEBP/GIF":"JPEG/PNG/WEBP/GIF","Less Than Storage":"Less Than {{MB}}MB","NFTName":"NFT Name","NFT Name ( NFT Ticker )":"NFT Name ( NFT Ticker )","Enter NFT name":"Enter NFT name","NFT Symbol($Ticker)":"NFT Symbol($Ticker)","Enter NFT Ticker":"Enter NFT Ticker","Description":"Description","Description of the project":"Description of the NFT","Project link(Optional)":"Link(Optional)","Website":"Website","Discord":"Discord","Twitter link":"Twitter link","TikTok":"TikTok","Telegram link":"Telegram link","YouTube":"YouTube","Mint Start Time":"Mint Start Time","UTC+0 (current time ≤ N days)":"UTC{{timezone}} (current time ≤ {{days}} days)","Start time":"Start time","Please select a time":"Please select a time","Mint Soft Cap":"Mint Soft Cap","0.01ETH per unit":"0.01ETH per unit","Please select the amount":"Please select the amount","PostOnTwitter":"Post on Twitter >","TotalMints":"Total Mints","MintCap":"Mint Cap","TotalMinted":"Total Minted","MintNow":"Mint Now","MintRewardDesc":"Mint {{mintAmount}} to receive {{nftAmount}} NFT + {{tokenAmount}} {{tokenSymbol}} tokens","MintRecords":"Mint Records","Amount":"Amount","Token":"Token","Selected":"Selected","Days":"Days","Hours":"Hours","Minutes":"Minutes","Creator":"Creator","Fees":"ETH","TX":"TX","JustNow":"Just now","MinutesAgo":"{0} min ago","HoursAgo":"{0} hr ago","DaysAgo":"{0} d ago","MonthsAgo":"{0} mo ago","YearsAgo":"{0} yr ago","Yesterday":"Yesterday","Today":"Today","Comment":"Comment","Fill in reply":"Fill in reply","Submit":"Submit","Pending Mint":"Pending Mint","Minting":"Minting","TrinityRanking":"Trinity Ranking","LastUpdateTime":"The data was last updated at {{time}} (UTC{{timezone}})","NFTMintedRanking":"NFT Mint Ranking","MintedProgress":"Minted Progress","LPAPR":"LP","LPAPR Rank":"LP APR Rank","AllPools":"All Pools","APR":"APR","24HPriceIncrease":"24H Price Increase","TokenName":"Token Name","24HPercent":"24H %","24HTradingVolume":"24H Trading Volume($)","24H TVL($)":"24H TVL($)","24H %":"24H %","24H TVL":"24H TVL","Ticker":"Ticker","TName":"Name","24H Trading Volume":"24h Vol","Trading History":"Trading History","Price":"Price","Liquidity":"Liquidity","24H Volume":"24H Volume","Token Address":"Token Address","Online Time":"Countdown","Indicators":"Indicators","Balance":"Balance","Account":"Address","Type":"Type","Date":"Date","Transaction":"Transaction","Select a Token":"Select a Token","Search by name or paste address":"Search by name or paste address","From":"From","To":"To","Max":"Max","Auto":"Auto","Custom":"Custom","When 1ETH is worth":"When 1ETH is worth","Select pair":"Select pair","Input Amount":"Input Amount","Send":"Send","Token Holder Distribution":"Token Holder Distribution","LP Holder Distribution":"LP Holder Distribution","Address":"Address","Amount(LP)":"Amount(LP)","Percentage":"Percentage","TotalValueOfLPPool":"Total Value of the LP Pool","ShareInLPPool":"Share in the LP Pool","Your Deposited LP":"Your Deposited LP","Inially Deposited LP":"Inially Deposited LP","IniallyWithdrawalTip":"Withdrawal is allowed at any time during theminting period, with 97% receivable for earlywithdrawal.","Continue":"Continue","Cancel":"Cancel","YourEarned":"Your Earned","AddLP":"Add LP","BurnLP":"Burn LP","End in":"End in","All":"All","Withdraw":"Withdraw","Claim":"Claim","Close":"Close","MaxSlippage":"Max slippage","TransactionDeadline":"Transaction deadline","YouAreSending":"You\'re sending","PleaseInputAmount":"Please input amount","WalletAddress":"Wallet address","LP Pool":"LP Pool","MyAssets":"My Assets","MyNFT":"My NFT","CreatedNFT":"Created NFT","MyToken":"My Token","MyLP":"My LP","Limited":"Limited","Edition":"Edition","Phrase":"Phrase","Mint Price":"Mint Price","NFT Dividend":"NFT Dividend","ALL LPs":"ALL LPs","Total staked":"Total staked","Earned":"Earned","Details >":"Details >","Operation":"Operation","MAX":"MAX","Back":"<Back","WithdrawETCPoupLiquidity":"Withdraw #{token0} - #{token1} Liquidity","ReceiveETCandPump":"Receive #{token0} and #{token1}","Burn":"Burn","YouWillReceive":"You will receive","NoConnectWalletTip":"Please connect your wallet to view your assets.","Finished":"Finished","nftShareContent":"@{{accountName}} platform, ${{name}} #NFT Mint progress completed {{percent}}% {{link}}","tokenShareContent":"@{{accountName}} platform, ${{name}} 24-hour price change {{percent}}% {{link}}","⚠Tips":"⚠Tips","SwapMaxLimitTips":"Transaction failed: You can\'t swap more than {{percentage}}% of the LP pool\'s tokens.","Confirm":"Confirm","Please fill current name":"Please fill current {{name}}!","Successfully Deploy":"Successfully Deploy","Error in deploy":"Error in deploy","No login!":"No login!","No file selected!":"No file selected!","File size must be Less Than {{MB}}MB!":"File size must be Less Than {{MB}}MB!","Token not found":"Token not found","Invalid deadline":"Invalid deadline","Amount is 0":"Amount is 0","NotEnoughBalance":"Not enough balance","Invalid address!":"Invalid address!","Mint not start":"Mint not start","Mint ended":"Mint ended","Invalid amount":"Invalid amount","Mint info not initialized":"Mint info not initialized","Invalid send amount":"Invalid send amount","Send Success":"Send Success","Send failed":"Send failed","Need connect wallet":"Need connect wallet","Insufficient liquidity":"Insufficient token in the pool. You can sold up to {{value}}."}'),c=JSON.parse('{"Title":"Exploring More Possibilities of DAO","Description":"TrinityDAO innovates the traditional single voting methodby integrating community nodes and introducing a multi-reward mechanism.lt combines voting with gamificationelements,allowing players to participate and benefitthrough gameplay, thus enhancing voting engagement.","ApplyForNode":"Apply for Node","SearchForAddress":"Search for address","OpenDAO":"Open DAO","SuccessfullyOpenDAO":"Successfully Open","FailedToOpenDAO":"Failed to Open","SelectDAOTitle":"Select a DAO","SearchByDAOName":"Search by DAO name","Search":"Search","Address":"Address","Creation Time":"Creation Time","VoteTitle":"Vote","Back":"Back","ManualVoting":"Manual Voting","AutomaticVoting":"Automatic Voting","VotingAirdrop":"Voting Airdrop","VotingNode":"Voting Node","NodeAddress":"Node Address","TotalVotes":"Total Votes","CreationTime":"Creation Time","AllRecords":"Node Records","MyVotingRecords":"My Records","VoteTime":"Vote Time","VoteNumber":"Vote Number","VoteAmount":"Vote Amount","Balance":"Balance","VoteButton":"Vote","VoteTip":"{{price}} ETH={{unitAmount}} Vote (max {{maxAmount}} votes each time, {{timeAmount}} vote every {{resetTime}} hours).","CancelVote":"Cancel","NoCancelVote":"Insufficient cancellation amount.","TotalCancelAmount":"Total cancel amount","CancelScope":"Cancellable","CancelVoteTip":"{{rate}}‰ of the airdrop weight contract balance / {{time}} hours.","TabVote":"Vote","TabEWV":"EWV","TabNode":"Node","CurrentStatus":"Current Status","VotingInProgress":"Voting in Progress","VotingEnd":"Vote End","VotingCountdown":"Voting Countdown","TotalRewards":"Total Rewards","MaxRewards":"Max Rewards","rankingTitle":"Ranking","userTitle":"User","votesTitle":"Votes","timeUnit":"h","rewardTitle":"Reward","RewardRankTitle":"Lucky","RewardRankDescription":"After Lucky activates, the last {{maxCount}} voters get rewards that must be claimed within {{endTime}} hours","VoteRankTitle":"Vote Top","VoteRankDescription":"{{rate}}% reward is given every {{time}} hours to the top {{maxCount}} voters.","NodeRankTitle":"Node Top","NodeRankDescription":"{{rate}}% reward is given every {{time}} hours to the top {{maxCount}} community voters.","FundInfoTitle":"Fund","FundInfoDescription":"After activation, the Fund balance is transferred {{rate}}% to {{name}}.","FundValueTitle":"Fund","FundButton":"Open","Countdown":"Countdown","RewardTitle":"Reward","RewardDescription":"After activation, {{rate}}% of the ${{name}} in the Reward contract will go to voting anomalies.","RewardButton":"Rewarded","RewardRecordsTitle":"Reward Records","Reward(Symbol)":"Reward","MyReward":"My Reward","MyRecords":"My Records","ApplyNode":"Apply Node","Time":"Time","Type":"Type","Amount":"Amount","Tx":"Tx","DAOReward":"DAO Reward","VoteReward":"Vote Reward","VoteTopReward":"Vote Top Reward","NodeTopReward":"Node Top Reward","LuckyReward":"Lucky Reward","OtherReward":"Reward","RewardClaimed":"Reward Claimed","DAORewardClaimed":"Reward DAO Claimed","RewardPending":"Reward DAO Pending","RewardDetails":"Reward Details","ClaimCountdown":"Claim Countdown","Claim":"Claim","ClaimableReward":"Claimable Reward","AirdropReward":"Airdrop Reward","VoteAirdrop":"Vote Airdrop","AutoVoted":"Auto Voted","currentIdentity":"Current Identity","apply":"Apply","NeedVoteForApplyNode":"Please vote first, then apply for a node.","levelBelowDescription":"Currently above this level.","notNode":{"title":"Not Node","description":"You are not a node."},"candidateNode":{"title":"Candidate Node","description":"Each voter can become a {{title}} by applying with ${{token}} worth {{value}} ETH."},"mainNode":{"title":"Main Node","description":"{{prevTitle}} becomes {{title}} when receives votes from {{nodeCount}} addresses"},"superNode":{"title":"Super Node","description":"{{prevTitle}} becomes {{title}} by spending ${{token}} worth {{value}} and receiving votes from {{nodeCount}} {{prevTitle}}."},"InsufflcientBalance":"Insufflcient Balance","InsufficientBalanceDescription":"The current balance is insufficient to apply for a node. Please buy ${{name}}.","BUY":"BUY","ApplyFor":"Apply for {{name}}","ApplyWith":"Apply with ${{name}} worth {{worth}}","ApplySuccessDescription":"Congratulations!\\nYou have upgraded to a {{name}}!","Noted":"Noted","NoSelectedDao":"No selected dao id!","NoSelectedNode":"No selected node address!","NoSelectedToken":"No selected token address!","VoteSuccess":"Vote Success","VoteFailed":"Vote Failed","CannotVoteToEach":"Two nodes cannot vote for each other.","CancelVoteSuccess":"Cancel Vote Success","CancelVoteFailed":"Cancel Vote Failed","GetRankDataFailed":"Get Rank Data Failed","ClaimVoteAndAirDropRewardSuccess":"DAO rewards claimed successfully","ClaimVoteAndAirDropRewardFailed":"DAO rewards claimed Failed","ClaimVoteTopRewardSuccess":"Claim Vote Top Reward Success","ClaimVoteTopRewardFailed":"Claim Vote Top Reward Failed","ClaimNodeTopRewardSuccess":"Claim Node Top Reward Success","ClaimNodeTopRewardFailed":"Claim Node Top Reward Failed","ClaimLuckyRewardSuccess":"Claim Lucky Reward Success","ClaimLuckyRewardFailed":"Claim Lucky Reward Failed","ClaimOtherRewardSuccess":"Claim Other Reward Success","ClaimOtherRewardFailed":"Claim Other Reward Failed","getTokenInfoFailed":"Failed to get token info","UserNodeTypeDontNeedApply":"User node type don\'t need apply","UserNodeTypeCanNotApplyThisNode":"User node type can not apply {{name}}"}'),u=JSON.parse('{"TrinitySwap":"TrinitySwap","ConnectWallet":"连接钱包","Success":"成功","Error":"错误","MyWallet":"我的钱包","Disconnect":"断开链接","Home":"首页","Launch":"Launch","Free Launch":"免费创建","Swap":"Swap","Chart":"图表","LP":"LP","Ranking":"Ranking","Pool":"Pool","DAO":"DAO","copyright":"\xa9 2024 Trinity. All rights reserved","Name":"Trinity","Desciption":"新一代多链聚合平台，免费创建，公平交易。","GuideLink":"它是如何运作的？","by":"创建者","PeakContentForNFT":"最新Mint进度达到80%的NFT将会自动显示在此.Trinity是一个去中心化聚合平台，不为任何meme coin背书。","PeakContentForToken":"All meme coins with the 24H TVL TOP3 will be automatically displayed here. Trinity is a decentralized aggregation platform and does not endorse any meme coin. (DYOR)!","MintProgress":"Mint进度","MintTime":"时间","State":"State","OnlineTime":"上线时间","Launch Time":"上线时间","Trading Volume":"成交量","Market Cap":"市值","24H Price Increase":"24小时涨跌幅","TotalMintProgress":"总Mint进度","24HMintProgress":"24小时Mint进度","Upcoming":"即将上线","Live":"进行中","Completed":"已完成","Failed":"失败","Asc":"升序","Desc":"降序","Bought":"购买","Sold":"卖出","of":"","SearchForNFTsPlaceHolder":"搜索NFTs","SearchForTokensPlaceHolder":"搜索tokens","Search":"搜索","Progress":"进度","Loading":"Loading, please wait.","LoadMore":"下滑查看更多","NoData":"No data here","Mint":"Mint","LaunchButton":"部署","Launch Title":"Launch Your NFT for Free on Trinity","FreeLaunch":"免费创建","PermanentReward":"永久10%奖励","NoTeamAllocation":"无团队分配","Images":"NFT图片","JPEG/PNG/WEBP/GIF":"JPEG/PNG/WEBP/GIF","Less Than Storage":"Less Than {{MB}}MB","NFTName":"NFT名称","NFT Name ( NFT Ticker )":"NFT 符号","Enter NFT name":"Enter NFT name","NFT Symbol($Ticker)":"NFT代码","Enter NFT Ticker":"Enter NFT Ticker","Description":"NFT描述","Description of the project":"请描述NFT","Project link(Optional)":"链接（可选）","Website":"Website","Discord":"Discord","Twitter link":"Twitter link","TikTok":"TikTok","Telegram link":"Telegram link","YouTube":"YouTube","Mint Start Time":"Mint开始时间","UTC+0 (current time ≤ N days)":"按照 UTC{{timezone}}时间（当前时间≤{{days}}天）","Start time":"开始时间","Please select a time":"请选择时间","Mint Soft Cap":"Mint软顶","0.01ETH per unit":"0.01ETH 1张","Please select the amount":"请选择金额","PostOnTwitter":"一键发Twitter","TotalMints":"总Mints","MintCap":"Mint Cap","TotalMinted":"Total Minted","MintNow":"Mint Now","MintRewardDesc":"Mint {{mintAmount}}将收到{{nftAmount}}张NFT+{{tokenAmount}}{{tokenSymbol}} tokens","MintRecords":"Mint记录","Amount":"数量","Token":"Token","Selected":"Selected","Days":"天","Hours":"时","Minutes":"分","Creator":"创建者","Fees":"ETH","TX":"TX","JustNow":"Just now","MinutesAgo":"{0} min ago","HoursAgo":"{0} hr ago","DaysAgo":"{0} d ago","MonthsAgo":"{0} mo ago","YearsAgo":"{0} yr ago","Yesterday":"Yesterday","Today":"Today","Comment":"评论","Fill in reply":"写下你的评论","Submit":"发送","Pending Mint":"待Mint","Minting":"Mint中","TrinityRanking":"Trinity Ranking","LastUpdateTime":"数据最后更新于{{time}} (UTC{{timezone}})","NFTMintedRanking":"NFT Mint排行榜","MintedProgress":"完成进度","LPAPR":"LP","LPAPR Rank":"LP APR排名","AllPools":"LP 交易对","APR":"APR","24HPriceIncrease":"24小时代币涨幅","TokenName":"Token符号","24HPercent":"24H %","24HTradingVolume":"24小时代币交易量","24H TVL($)":"24小时交易量($）","24H %":"24H %","24H TVL":"24小时交易量","Ticker":"代码","TName":"名字","24H Trading Volume":"24h Vol","Trading History":"交易记录","Price":"价格","Liquidity":"流动性","24H Volume":"24小时交易量","Token Address":"代币地址","Online Time":"上线时间","Indicators":"Indicators","Balance":"Balance","Account":"地址","Type":"方向","Date":"日期","Transaction":"交易","Select a Token":"选择代币","Search by name or paste address":"搜索名称或粘贴地址","From":"From","To":"To","Max":"Max","Auto":"Auto","Custom":"Custom","When 1ETH is worth":"When 1ETH is worth","Select pair":"Select pair","Input Amount":"输入金额","Send":"发送","Token Holder Distribution":"Token持有人分布","LP Holder Distribution":"LP持有人分布","Address":"地址","Amount(LP)":"数量(LP)","Percentage":"百分比","TotalValueOfLPPool":"当前LP池总价值","ShareInLPPool":"流动性池中的份额","Your Deposited LP":"存入LP","Inially Deposited LP":"初始LP","IniallyWithdrawalTip":"Mint期间可随时撤回，提前撤回可领取97%","Continue":"继续","Cancel":"取消","YourEarned":"可领取","AddLP":"增加LP","BurnLP":"销毁LP","End in":"倒计时","All":"全部","Withdraw":"取出","Claim":"领取","Close":"关闭","MaxSlippage":"Max slippage","TransactionDeadline":"Transaction deadline","YouAreSending":"You\'re sending","PleaseInputAmount":"请输入数量","WalletAddress":"钱包地址","LP Pool":"LP池","MyAssets":"我的资产","MyNFT":"我的NFT","CreatedNFT":"创建的NFT","MyToken":"我的Token","MyLP":"我的LP","Limited":"限量版","Edition":"Edition","Phrase":"Phrase","Mint Price":"Mint价格","NFT Dividend":"NFT分红","ALL LPs":"资金池","Total staked":"总质押","Earned":"总分红","Details >":"详情 >","Operation":"Operation","MAX":"MAX","Back":"< 返回","WithdrawETCPoupLiquidity":"取出#{token0}-#{token1}流动性","ReceiveETCandPump":"接收#{token0}和#{token1}","Burn":"销毁","YouWillReceive":"您将收到","NoConnectWalletTip":"请先连接钱包","Finished":"结束","nftShareContent":"@{{accountName}} 平台, ${{name}} #NFT Mint进度完成{{percent}}% {{link}}","tokenShareContent":"@{{accountName}} 平台, ${{name}} 24小时涨幅{{percent}}% {{link}}","⚠Tips":"⚠注意","SwapMaxLimitTips":"交易失败，单笔交易的代币不能超过LP池的{{percentage}}%。","Confirm":"确认","Please fill current name":"Please fill current {{name}}!","Successfully Deploy":"部署成功","Error in deploy":"部署失败","No login!":"没有登录!","No file selected!":"没有插入图片!","File size must be Less Than {{MB}}MB!":"文件大小不能超过{{MB}}MB!","Token not found":"没有发现token。","Invalid deadline":"无效的最后期限","Amount is 0":"数量为0","NotEnoughBalance":"余额不足","Invalid address!":"无效地址!","Mint not start":"Mint还未开始","Mint ended":"Mint已结束","Invalid amount":"无效数量","Mint info not initialized":"Mint信息未初始化","Invalid send amount":"发送数量输入无效","Send Success":"发送成功","Send failed":"发送失败","Need connect wallet":"请链接钱包","Insufficient liquidity":"池子余额不足，最多可卖出{{value}}"}'),p=JSON.parse('{"Title":"探索 DAO 的更多可能","Description":"TrinityDAO 创新了传统单一的投票方式，结合社区节点并增加多重奖励机制，将投票与游戏化元素结合，让玩家在游戏中参与和获益，提升投票积极性。","ApplyForNode":"申请节点","SearchForAddress":"搜索地址","OpenDAO":"Open DAO","SuccessfullyOpenDAO":"Successfully Open","SelectDAOTitle":"Select a DAO","SearchByDAOName":"Search by DAO name","Search":"搜索","Address":"地址","Creation Time":"创建时间","VoteTitle":"投票","Back":"返回","ManualVoting":"手动投票","AutomaticVoting":"自动投票","VotingAirdrop":"投票空投","VotingNode":"投票节点","NodeAddress":"节点地址","TotalVotes":"总投票","CreationTime":"创建时间","AllRecords":"节点记录","MyVotingRecords":"我的记录","VoteTime":"投票时间","VoteNumber":"投票数量","VoteAmount":"投票金额","Balance":"余额","VoteButton":"投票","VoteTip":"{{price}} ETH={{unitAmount}} Vote (max {{maxAmount}} votes each time, {{timeAmount}} vote every {{resetTime}} hours).","CancelVote":"取消","NoCancelVote":"取消额度不足！","TotalCancelAmount":"总取消额度","CancelScope":"可取消","CancelVoteTip":"空投权重合约余额的 {{rate}}‰ / {{time}} 小时。","TabVote":"投票","TabEWV":"EWV","TabNode":"节点","CurrentStatus":"当前状态","VotingInProgress":"投票进行中","VotingEnd":"投票结束","VotingCountdown":"投票倒计时","TotalRewards":"总奖励","MaxRewards":"最大奖励","rankingTitle":"排名","userTitle":"用户","votesTitle":"投票","timeUnit":"h","rewardTitle":"奖励","RewardRankTitle":"Lucky","RewardRankDescription":"Lucky 开启后，奖励最后 {{maxCount}} 位投票者，奖励需在 {{endTime}} 小时内领取。","VoteRankTitle":"投票 Top","VoteRankDescription":"每 {{time}} 小时奖励 {{rate}}%，奖励 {{time}} 小时内总投票前 {{maxCount}} 名。","NodeRankTitle":"节点 Top","NodeRankDescription":"每 {{time}} 小时奖励 {{rate}}%，奖励 {{time}} 小时内社区总投票前 {{maxCount}} 名。","FundInfoTitle":"Fund","FundInfoDescription":"开启后，Fund 合约余额自动 {{rate}}% 转入 {{name}}.","FundValueTitle":"Fund","FundButton":"开启","Countdown":"倒计时","RewardTitle":"Reward","RewardDescription":"开启后，Reward 合约中的 ${{name}} 将 {{rate}}% 均分给投票异常者。","RewardButton":"已奖励","RewardRecordsTitle":"奖励记录","Reward(Symbol)":"奖励","MyReward":"我的奖励","MyRecords":"奖励记录","ApplyNode":"申请节点","Time":"时间","Type":"全部类型","Amount":"数量","Tx":"Tx","DAOReward":"DAO奖励","VoteReward":"投票奖励","VoteTopReward":"投票 Top奖励","NodeTopReward":"节点 TOP奖励","LuckyReward":"Lucky 奖励","OtherReward":"Reward","RewardClaimed":"已领取奖励","DAORewardClaimed":"已领取DAO奖励","RewardPending":"待领取DAO奖励","RewardDetails":"奖励明细","ClaimCountdown":"领取倒计时","Claim":"领取奖励","ClaimableReward":"可领取奖励","AirdropReward":"空投奖励","VoteAirdrop":"投票空投","AutoVoted":"已自动投票","currentIdentity":"当前身份","apply":"去申请","NeedVoteForApplyNode":"请先投票，再申请节点。","levelBelowDescription":"当前高于该等级","candidateNode":{"title":"候选节点","description":"每个投票者都有机会成为{{title}}，花费价值 {{value}} ETH 的 ${{token}} 申请。"},"mainNode":{"title":"主节点","description":"当{{prevTitle}}有 {{nodeCount}} 个地址为其投票时，即成为{{title}}。"},"superNode":{"title":"超级节点","description":"{{prevTitle}}可花费价值 {{value}} ETH 的 ${{token}} 并有 {{nodeCount}} 个{{prevTitle}}为其投票，即成为{{title}}。"},"InsufflcientBalance":"余额不足","InsufficientBalanceDescription":"当前余额不足以申请节点 情前去购买${{name}}.","BUY":"去购买","ApplyFor":"申请{{name}}","ApplyWith":"花费价值 {{worth}} 的 ${{name}} 申请","ApplySuccessDescription":"恭喜你升级成为{{name}}。","Noted":"已知晓","NoSelectedDao":"未选择 DAO ID","NoSelectedNode":"未选择节点地址","NoSelectedToken":"未选择代币地址","VoteSuccess":"投票成功","VoteFailed":"投票失败","CannotVoteToEach":"两个节点不能互相投票。","CancelVoteSuccess":"取消投票成功","CancelVoteFailed":"取消投票失败","GetRankDataFailed":"获取排名数据失败","ClaimVoteAndAirDropRewardSuccess":"领取DAO奖励成功","ClaimVoteAndAirDropRewardFailed":"领取DAO奖励失败","ClaimVoteTopRewardSuccess":"领取投票 Top 奖励成功","ClaimVoteTopRewardFailed":"领取投票 Top 奖励失败","ClaimNodeTopRewardSuccess":"领取节点 Top 奖励成功","ClaimNodeTopRewardFailed":"领取节点 Top 奖励失败","ClaimLuckyRewardSuccess":"领取 Lucky 奖励成功","ClaimLuckyRewardFailed":"领取 Lucky 奖励失败","ClaimOtherRewardSuccess":"领取其他奖励成功","ClaimOtherRewardFailed":"领取其他奖励失败","getTokenInfoFailed":"获取代币信息失败","UserNodeTypeDontNeedApply":"用户节点类型不需要申请","UserNodeTypeCanNotApplyThisNode":"用户节点类型不能申请{{name}}"}');function m(e){let{children:t}=e;return(0,i.jsx)(i.Fragment,{children:t})}s.ZP.use(l.Db).init({resources:{en:{common:d,dao:c},zh:{common:u,dao:p}},lng:"en",interpolation:{escapeValue:!1}});var T=n(2265),y=n(53335),g=n(68575),w=n(1455),f=n(37490),h=n(35178),A=n(69356),k=n(72300),C=n(76211),N=n(95665),R=n(68651),v=n(81900),P=n(20166),M=n(79787);let S=(0,w.a9)({isSerializable:e=>"bigint"==typeof e||e instanceof R.Z||e instanceof v.Z||e instanceof M.Z||e instanceof P.Ei||(0,w.yd)(e),getEntries:e=>"bigint"==typeof e?[["$bigint",e.toString()]]:e instanceof R.Z?[["$BigNumber",e.toString()]]:e instanceof v.Z?[["$Decimal",e.toString()]]:e instanceof M.Z?[["$Str",e.toString()]]:e instanceof P.Ei?[["$Options",e.toString()]]:Object.entries(e)}),b=()=>(0,w.xC)({reducer:{global:h.Z.slice.reducer,user:A.Z.slice.reducer,nft:C.Z.slice.reducer,token:k.Z.slice.reducer,dao:N.Z.slice.reducer},middleware:e=>new w.ps(S)}),L=b();function D(e){let{children:t}=e;return(0,i.jsx)(g.zt,{store:L,children:t})}(0,f.KV)(b);let F=["/_next/static/media/favicon.0be0f8d0.png"];var V=n(75186),I=n(6178),E=n(59201),O=n(4810),x=n.n(O),H=n(74439),B=n(64798),Z=n.n(B),W=n(10433),U=n(52926),_=n(89522),z=n(83123),Y=n(56611),j=n(13965),$=n(81939),q=n(92348),G=n(80149),J=n(60389),X=n(47477);let Q="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&Q.decode();let K=null;async function ee(e,t){if("function"==typeof Response&&e instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,t)}catch(t){if("application/wasm"!=e.headers.get("Content-Type"))console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t);else throw t}let n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}{let n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}async function et(e){if(void 0!==a)return a;void 0!==e&&Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead"),void 0===e&&(e=new n.U(n(92366)));let t=function(){let e={};return e.wbg={},e.wbg.__wbg_log_12af4e1f5b304c40=function(e,t){var n;console.log((n=e>>>0,Q.decode(((null===K||0===K.byteLength)&&(K=new Uint8Array(a.memory.buffer)),K).subarray(n,n+t))))},e}();("string"==typeof e||"function"==typeof Request&&e instanceof Request||"function"==typeof URL&&e instanceof URL)&&(e=fetch(e));let{instance:i,module:o}=await ee(await e,t);return a=i.exports,et.__wbindgen_wasm_module=o,K=null,a}function en(e){let{i18n:t}=(0,l.$G)(["common"]),n=(0,I.T)(),a=T.useRef(null),o=[],r=(0,I.C)(e=>e.global),s=(0,I.C)(e=>e.user),{disconnectWallet:d}=T.useContext(G.Cv),c=(0,J.Z)();function u(){}async function p(){let e,t;W.Z.D("window load");let{promise:a,cancel:i}=(t=Promise.resolve(),"serviceWorker"in navigator&&(t=navigator.serviceWorker.register("/sw.js",{scope:"/"}).then(t=>{e=t,W.Z.D("SW registered: ",t,null==e?void 0:e.scope),navigator.serviceWorker.addEventListener("message",e=>{let t=e.data;"login_status_change"===t.event&&(W.Z.I("login_status_change",t.data),"request-logout"===t.data&&(n(h.Z.slice.actions.clearLoginToken()),n(A.Z.slice.actions.clearUserInfo())))})}).catch(e=>{W.Z.E("SW registration failed: ",e)})),{promise:t,cancel:function(){null==e||e.unregister()}});return et("/pkg/wasm_bg.wasm").then(e=>{e.check()}).catch(e=>{W.Z.E("wasm error in calling:",e)}),o.push(i),{promise:a,cancel:i}}function m(e){W.Z.D("window load")}function y(e){W.Z.D("User leave")}let g=Z()(function(){let e=H.Z.checkIfMobile(),t=H.Z.getClientWidth(),a=H.Z.getClientHeight(),i=H.Z.getScrollTop(),o=H.Z.getScrollHeight();n(h.Z.slice.actions.updateWindowSizeInfo({isMobile:e,clientWidth:t,clientHeight:a,scrollTop:i,scrollHeight:o}))},150),w=Z()(function(e){n(h.Z.slice.actions.updateWindowSizeInfo({scrollTop:H.Z.getScrollTop()}))},16);async function f(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new AbortController,t=new E.M().getAuthorization();if(""===t){n(A.Z.slice.actions.updateUserInfo({walletAddress:""})),n(h.Z.slice.actions.clearLoginToken());return}let a=new _.Z,i=await a.getUserInfo({Authorization:t,abortController:e});if(i.hasError()){let e=i.getError();W.Z.E("getUserInfo error:".concat(e.msg)),n(h.Z.slice.actions.clearLoginToken()),n(A.Z.slice.actions.updateUserInfo({walletAddress:""}));return}let o=i.getData();return n(h.Z.slice.actions.updateLoginToken({token:t})),n(A.Z.slice.actions.updateETHWalletInfo({walletName:Y.w3.WALLETCONNECT,walletBalance:s.ethInfo.walletAddress===o.walletAddress?s.ethInfo.walletBalance:"0",isConnected:s.ethInfo.isConnected,walletAddress:o.walletAddress})),n(A.Z.slice.actions.updateUserInfo({walletAddress:o.walletAddress})),{cancel(t){e.abort(t)}}}async function k(){let e=new _.Z,t=j.r.getInstance();await t.close();let a=$.Z.getInstance(t.getProvider()),i=$.Z.getTimestamp(),o=(0,q.Qp)(s.ethInfo.walletAddress,i);try{let t=await a.getWalletSignature(o),r={walletAddress:s.ethInfo.walletAddress,signature:t,timestamp:i};try{let t=await e.loginWallet(r);if(t.hasError())throw Error(t.getError().msg);let a=t.getData();n(h.Z.slice.actions.updateLoginToken({token:a.token})),n(A.Z.slice.actions.updateETHWalletInfo({...s.ethInfo,walletAddress:a.walletAddress}))}catch(t){(0,z.L6)(new z.HU(t,"Login API Error").asToastMessage());let e=s.ethInfo.walletName;n(A.Z.slice.actions.clearETHWalletInfo()),n(h.Z.slice.actions.clearLoginToken()),d(e)}finally{n(A.Z.slice.actions.updateNeedBinding(!1))}}catch(t){(0,z.L6)(new z.HU(t,"Error in connect wallet").asToastMessage());let e=s.ethInfo.walletName;n(A.Z.slice.actions.clearETHWalletInfo()),n(h.Z.slice.actions.clearLoginToken()),d(e)}finally{n(A.Z.slice.actions.updateNeedBinding(!1))}}T.useEffect(()=>{s.needBinding&&s.ethInfo.isConnected&&s.ethInfo.walletAddress&&(r.token||k())},[s.needBinding,s.ethInfo.isConnected,s.ethInfo.walletAddress]);let[C,N]=T.useState([]);return T.useEffect(()=>{try{let e=p();x().setAppElement(a.current);let i=new AbortController;window.addEventListener("DOMContentLoaded",u,{signal:i.signal}),window.addEventListener("load",m,{signal:i.signal}),window.addEventListener("beforeunload",y,{signal:i.signal}),window.addEventListener("resize",g,{signal:i.signal});let r=H.Z.observerElementResize(g);window.addEventListener("scroll",w,{signal:i.signal}),window.onerror=function(e,t,n,a,i){W.Z.E("Window onerror: ".concat(e))},window.onunhandledrejection=function(e){W.Z.E("Window onunhandledrejection:",e.reason.message,e.reason.stack)},window.addEventListener("eip6963:announceProvider",e=>{N([...C,e.detail]),W.Z.I("New provider added",C)},{signal:i.signal});let s=function e(){let t=H.Z.sleepForAnimationFrame(1e3);return t.promise.then(()=>{n(h.Z.slice.actions.updateTime(+new Date)),t=e()}),{promise:t.promise,cancel(){t.cancel()},wait:t.wait}}();o.push(s.cancel);let l=localStorage.getItem(X.E);return l&&t.changeLanguage(l),c.updateInfo(),e.finally(()=>f(i)),function(){r.disconnect(),i.abort("useEffect callback"),o.forEach(e=>e())}}catch(e){(0,z.L6)("App error in calling:".concat(e)),W.Z.E("App error in calling:",e)}},[]),T.useEffect(()=>{var e;e=r.token||null,"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(t=>{var n,a;e?null===(a=t.active)||void 0===a||a.postMessage({event:"update_uesr_token",data:e}):null===(n=t.active)||void 0===n||n.postMessage({event:"request-logout",data:e})})},[r.token]),(0,i.jsx)("div",{ref:a,children:(0,i.jsx)(T.Suspense,{fallback:(0,i.jsx)(U.Z,{}),children:e.children})})}let ea="force-dynamic";function ei(e){let{children:t}=e;return(0,i.jsxs)("html",{lang:"en",children:[(0,i.jsxs)("head",{children:[(0,i.jsx)("title",{children:"Trinity"}),(0,i.jsx)("meta",{name:"description",content:"Trinity"}),(0,i.jsx)("link",{rel:"icon",href:null==F?void 0:"/_next/static/media/favicon.0be0f8d0.png"})]}),(0,i.jsxs)("body",{className:(0,y.m6)(r().className),children:[(0,i.jsx)(D,{children:(0,i.jsx)(G.mb,{children:(0,i.jsx)(m,{children:(0,i.jsx)(en,{children:t})})})}),(0,i.jsx)(V.x7,{})]})]})}},52926:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var a=n(57437);n(2265),n(75546);var i=n(18030);function o(e){let{text:t,className:n,children:o,...r}=e;return(0,a.jsxs)("div",{className:"component-loading text-secondary text-center ".concat(null!=n?n:""),children:[(0,a.jsx)(i.Z,{className:"icon mx-auto"}),t?(0,a.jsx)("p",{className:"text-tip text-[14px]",children:t}):null,o]})}},83123:function(e,t,n){"use strict";n.d(t,{HU:function(){return d},L6:function(){return c},x9:function(){return u}});var a=n(12249);n(57437);var i=n(75186),o=n(6139);let r="",s=null;function l(e,t){var n,a,i,o,l,d,c,u;let p={color:"#fff",marginTop:"calc(90px + 2.59vh)",padding:"14px 22px",fontSize:"16px",...e};return r!==t[0]&&(r=t[0],t[1]={...null!==(l=t[1])&&void 0!==l?l:"",duration:null!==(d=null===(n=t[1])||void 0===n?void 0:n.duration)&&void 0!==d?d:3e3,icon:null!==(c=null===(a=t[1])||void 0===a?void 0:a.icon)&&void 0!==c?c:e.icon,style:{...null!==(u=null===(i=t[1])||void 0===i?void 0:i.style)&&void 0!==u?u:"",...p}},clearTimeout(s),s=window.setTimeout(()=>{r=""},null===(o=t[1])||void 0===o?void 0:o.duration),t)}class d extends Error{static analyze(e){if("string"==typeof e)return e;if("object"==typeof e&&null!==e){var t,n,a,i;return null!==(i=null!==(a=null!==(n=null!==(t=null==e?void 0:e.msg)&&void 0!==t?t:null==e?void 0:e.reason)&&void 0!==n?n:null==e?void 0:e.shortMessage)&&void 0!==a?a:null==e?void 0:e.message)&&void 0!==i?i:o.Z.stringify(e)}}asToastMessage(){return this.message}constructor(e,t){var n;super(null!==(n=d.analyze(e))&&void 0!==n?n:t),(0,a._)(this,"originError",void 0),(0,a._)(this,"replace",void 0),this.originError=e,this.replace=t}}function c(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];let a=l({background:"#E84142",icon:null},t);if(!1!==a)return i.ZP.error(...a)}function u(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];let a=l({background:"var(--tw-theme-color-highlight)",icon:null},t);if(!1!==a)return i.ZP.success(...a)}},60389:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var a=n(71549),i=n(21707);let o=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLatestPrice",outputs:[{internalType:"int256",name:"",type:"int256"},{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"randomNum",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];var r=n(6178),s=n(72300),l=n(68651);let d=[{inputs:[{internalType:"address",name:"_aggregator",type:"address"},{internalType:"address",name:"_accessController",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"int256",name:"current",type:"int256"},{indexed:!0,internalType:"uint256",name:"roundId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"updatedAt",type:"uint256"}],name:"AnswerUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"roundId",type:"uint256"},{indexed:!0,internalType:"address",name:"startedBy",type:"address"},{indexed:!1,internalType:"uint256",name:"startedAt",type:"uint256"}],name:"NewRound",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"OwnershipTransferRequested",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[],name:"acceptOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"accessController",outputs:[{internalType:"contract AccessControllerInterface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"aggregator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_aggregator",type:"address"}],name:"confirmAggregator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"description",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_roundId",type:"uint256"}],name:"getAnswer",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint80",name:"_roundId",type:"uint80"}],name:"getRoundData",outputs:[{internalType:"uint80",name:"roundId",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"startedAt",type:"uint256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint80",name:"answeredInRound",type:"uint80"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_roundId",type:"uint256"}],name:"getTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestAnswer",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestRoundData",outputs:[{internalType:"uint80",name:"roundId",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"startedAt",type:"uint256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint80",name:"answeredInRound",type:"uint80"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address payable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint16",name:"",type:"uint16"}],name:"phaseAggregators",outputs:[{internalType:"contract AggregatorV2V3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"phaseId",outputs:[{internalType:"uint16",name:"",type:"uint16"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_aggregator",type:"address"}],name:"proposeAggregator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"proposedAggregator",outputs:[{internalType:"contract AggregatorV2V3Interface",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint80",name:"_roundId",type:"uint80"}],name:"proposedGetRoundData",outputs:[{internalType:"uint80",name:"roundId",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"startedAt",type:"uint256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint80",name:"answeredInRound",type:"uint80"}],stateMutability:"view",type:"function"},{inputs:[],name:"proposedLatestRoundData",outputs:[{internalType:"uint80",name:"roundId",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"startedAt",type:"uint256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint80",name:"answeredInRound",type:"uint80"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_accessController",type:"address"}],name:"setController",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_to",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];function c(){let e=(0,r.T)();async function t(e){e="0x1eAd8B0E59874deA7a64Dc7708ccd65ce5059aB0";let t=a.Q.getDefaultProvider(),n=new i.z(a.Q.getTargetNet().chainId,t),r=new i.C(e,o),[s]=await n.all([r.getLatestPrice()]),[l,d]=s;return{price:l,decimals:Number(d)}}async function n(n){let a=await t(n);e(s.Z.slice.actions.updateEth2usd(new l.Z(a.price.toString()).div(10**a.decimals).toNumber()))}async function c(){let e="0x4aDC67696bA383F43DD60A9e78F2C97Fbbfc7cb1";if(!e)throw Error("Can't found NEXT_PUBLIC_PRICE_EACAggregator_CONTRACT_ADDRESS!");let t=a.Q.getDefaultProvider(),n=new i.z(a.Q.getTargetNet().chainId,t),o=new i.C(e,d),[r,s]=await n.all([o.latestAnswer(),o.decimals()]);return{price:r,decimals:Number(s)}}async function u(){let t=await c();e(s.Z.slice.actions.updateEth2usd(new l.Z(t.price.toString()).div(10**t.decimals).toNumber()))}return{getInfo:t,updateInfo:n,getEth2UsdPrice:c,updateEth2UsdPrice:u}}},89522:function(e,t,n){"use strict";n.d(t,{Z:function(){return c}});var a=n(12249),i=n(5853),o=n(68031),r=n(59201),s=n(8113),l=n(344),d=n(63671);class c extends d.bQ{async loginWallet(e){var t;let n=new r.M,a=new l.M2y(this.buildConfigure(n)),i=new o.zv(await a.loginByWallet({walletLoginRequestVO:{walletAddress:e.walletAddress,signature:e.signature,timestamp:e.timestamp.toString()}},{signal:null===(t=e.abortController)||void 0===t?void 0:t.signal}));return i.hasError()||n.afterHandler(i.response,{url:"/login",data:e}),i}async getUserInfo(e){var t;let n=new Headers;e.Authorization&&n.set("Authorization",e.Authorization),delete e.Authorization;let a=new l.M2y(this.buildConfigure());return new o.zv(await a.getUserInfo({signal:null===(t=e.abortController)||void 0===t?void 0:t.signal,headers:n}))}async uploadFile(e){var t;let n=new FormData;n.append("file",e.file);let a=new l.M2y(this.buildConfigure()),i=await a.upload({file:e.file},{signal:null===(t=e.abortController)||void 0===t?void 0:t.signal,body:n});return new o.zv(i)}async addNFTInfo(e){var t;e.Authorization,delete e.Authorization;let n=new l.lG6(this.buildConfigure());return new o.zv(await n.uploadHash({uploadHashRequestVO:e},{signal:null===(t=e.abortController)||void 0===t?void 0:t.signal}))}constructor(e=new r.Z){super(),(0,a._)(this,"httpRequest",void 0),this.httpRequest=e}}c=(0,i.gn)([s.ZP.Singleton,(0,i.w6)("design:type",Function),(0,i.w6)("design:paramtypes",["undefined"==typeof HttpRequest?Object:HttpRequest])],c)},76211:function(e,t,n){"use strict";var a,i=n(10433),o=n(1455);(a||(a={})).slice=(0,o.oM)({name:"nft",initialState:{nftStakingRewardsContractDetail:{ethBalance:0n,stakingToken:"",stakingRewards:"",factory:"",lastUpdateTime:0,rewardPerTokenStored:0n,liquidityRate:0n,userRewardPerTokenPaid:0n,rewards:0n,stakedAmount:0n,earned:0n},symbolInfo:{nftAddress:"",tokenAddress:""},nftContractInfo:{maxMintAmount:0,cap:0n,price:0n,startTs:0,endTs:0,nftStakingRewards:"",walletMaxSupply:0n,creator:"",imageAddress:"",externalLink:"",totalSupply:0n},globalInfo:{tokenAddress:""}},reducers:{updateNftStakingRewardsContractDetail(e,t){e.nftStakingRewardsContractDetail.ethBalance=t.payload.ethBalance,e.nftStakingRewardsContractDetail.stakingToken=t.payload.stakingToken,e.nftStakingRewardsContractDetail.stakingRewards=t.payload.stakingRewards,e.nftStakingRewardsContractDetail.factory=t.payload.factory,e.nftStakingRewardsContractDetail.lastUpdateTime=t.payload.lastUpdateTime,e.nftStakingRewardsContractDetail.rewardPerTokenStored=t.payload.rewardPerTokenStored,e.nftStakingRewardsContractDetail.liquidityRate=t.payload.liquidityRate},updateNftStakingRewardsAccountInfo(e,t){e.nftStakingRewardsContractDetail.userRewardPerTokenPaid=t.payload.userRewardPerTokenPaid,e.nftStakingRewardsContractDetail.rewards=t.payload.rewards,e.nftStakingRewardsContractDetail.stakedAmount=t.payload.stakedAmount,e.nftStakingRewardsContractDetail.earned=t.payload.earned},updateSymbolInfo(e,t){e.symbolInfo=t.payload},updateNftContractInfo(e,t){e.nftContractInfo=t.payload},updateGlobalInfo(e,t){i.Z.I("updateGlobalInfo",t.payload),e.globalInfo.tokenAddress=t.payload.tokenAddress}}}),t.Z=a},2778:function(){},16413:function(){},72063:function(){},24069:function(){},55170:function(){},24385:function(){},43906:function(){},75546:function(){}},function(e){e.O(0,[3264,2784,5073,1919,6764,3776,3690,4810,1743,1185,2971,2117,1744],function(){return e(e.s=91485)}),_N_E=e.O()}]);